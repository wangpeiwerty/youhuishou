apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.boyong.youhuishou"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 13
        versionName "1.3"
        manifestPlaceholders = [
                GETUI_APP_ID    : "Jdb3YUBv2AAA4ewD80RNh1",
                GETUI_APP_KEY   : "7IUuJvNw0C7x2bpx2qfJZ8",
                GETUI_APP_SECRET: "1KMC51f24n8pjUn1RektM3"
        ]
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86_64", "x86"
        }

    }

    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        abortOnError false
    }

    //签名
    signingConfigs {
        debug {
            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {// 自己的签名文件
            storeFile file('../../youhuishou/keyStore.jks')
            storePassword 'boyong'
            keyAlias 'release'
            keyPassword 'boyong'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    //jniLibs目录
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

// 多渠道配置
    productFlavors {
        //线上环境
        onLine {
        }
        //内测环境
        beta {
        }
        //mock环境
        mock {
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (variant.buildType.name.equals('release')) {
                def fileName = "${appName()}_v${defaultConfig.versionName}_${releaseTime()}_release.apk"
                if (variant.flavorName.equals("onLine")) {
                    fileName = "${appName()}_v${defaultConfig.versionName}_${releaseTime()}_onLine_release.apk"
                } else if (variant.flavorName.equals("beta")) {
                    fileName = "${appName()}_v${defaultConfig.versionName}_${releaseTime()}_beta_release.apk"
                }
                output.outputFile = new File(outputFile.parent, fileName)
            } else if (variant.buildType.name.equals('debug')) {
                def fileName = "${appName()}_v${defaultConfig.versionName}_${releaseTime()}_debug.apk"
                if (variant.flavorName.equals("onLine")) {
                    fileName = "${appName()}_v${defaultConfig.versionName}_${releaseTime()}_onLine_debug.apk"
                } else if (variant.flavorName.equals("beta")) {
                    fileName = "${appName()}_v${defaultConfig.versionName}_${releaseTime()}_beta_debug.apk"
                }
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

def appName() {
    return new String("youhuishou")
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project(':mvp')
    //注解
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //个推
    compile 'com.getui:sdk:2.12.3.0'
}
